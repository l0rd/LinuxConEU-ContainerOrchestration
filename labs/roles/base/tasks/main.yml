---
- name: install epel repository
  become: yes
  yum:
    name: epel-release
  when: "epel == true"

- name: install utilities
  become: yes
  yum: pkg={{ item }} state=present
  with_items:
    "{{ utilities }}"

- name: disable SELinux
  become: yes
  selinux: policy=targeted state=permissive
  when: "no_selinux == true"

- name: disable firewalld
  become: yes
  service: name=firewalld state=stopped enabled=no
  when: "no_firewalld == true"

- name: check if /etc/hosts.orig exists
  stat: path=/etc/hosts.orig
  register: etc_hosts_orig

- name: backup original /etc/hosts
  become: yes
  command: "cp /etc/hosts /etc/hosts.orig"
  when: etc_hosts_orig.stat.exists == False

- name: generate /etc/hosts
  become: yes
  template:
    src=templates/hosts.j2
    dest=/etc/hosts
    owner=root
    group=root
    mode=0644

- name: setup docker repository
  become: yes
  yum_repository:
    name: docker
    description: Docker Repository
    baseurl: https://yum.dockerproject.org/repo/main/centos/7/
    gpgkey: https://yum.dockerproject.org/gpg
    gpgcheck: yes
    enabled: "{{ docker_latest }}"

- name: remove docker packages from CentOS
  become: yes
  yum: pkg=docker* state=absent
  when: "docker_latest == true"

- name: install docker engine
  become: yes
  yum: pkg="{{ (docker_latest == true) | ternary('docker-engine', 'docker') }}" state=present

- include_vars: mesos.yml
  when: "mesos == true"

- name: install mesos repository
  become: yes
  yum:
    name: "{{ mesos_repo_pkg }}"
    state: present
  when: "mesos == true"

- name: Set IP address variables
  set_fact:
    kubemaster_ip_address: "{{ hostvars[groups['kubemaster'][0]].ansible_eth0.ipv4.address }}"
    etcd_ip_address: "{{ hostvars[groups['etcd'][0]].ansible_eth0.ipv4.address }}"
